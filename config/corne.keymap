/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp ESCAPE      &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL       &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp ESC
                              &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB        &kp F5         &kp LC(LA(LG(W)))  &kp F4        &kp F10          &kp F5           &kp HOME        &kp UP_ARROW    &kp NUMBER_0     &kp NUMBER_7  &kp N8        &kp NUMBER_9
&kp LEFT_ALT   &kp LC(LS(S))  &kp LG(LS(S))      &kp F10       &kp F11          &kp F12          &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &kp NUMBER_4  &kp N5        &kp NUMBER_6
&kp LA(LSHFT)  &bt BT_CLR     &bt BT_SEL 0       &bt BT_SEL 1  &kp C_VOLUME_UP  &kp C_VOL_DN     &kp PG_UP       &kp PAGE_DOWN   &kp NUMBER_0     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3
                                                 &to 3         &trans           &kp LG(LS(S))    &kp RET         &trans          &mo 0
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &mo 3     &trans    &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&kp ESC         &kp Q    &kp W         &kp E         &kp R         &kp NUMBER_6    &trans  &trans  &trans        &trans      &trans           &trans
&kp LCTRL       &kp A    &kp S         &kp D         &kp F         &kp C           &trans  &trans  &trans        &kp K_MUTE  &kp C_VOLUME_UP  &kp C_VOL_DN
&kp LEFT_SHIFT  &kp TAB  &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_9  &kp NUMBER_0    &trans  &trans  &trans        &trans      &kp LEFT         &kp RIGHT
                                       &kp TAB       &kp LEFT_ALT  &kp SPACE       &to 0   &kp P   &kp LEFT_WIN
            >;
        };
    };
};
